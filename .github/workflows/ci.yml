name: CI

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        dotnet-quality: 'ga'

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json', '**/*.csproj', '**/Directory.Packages.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal --logger "trx;LogFileName=test-results.trx" --collect:"XPlat Code Coverage"
      env:
        OPENAI_API_KEY: test-key-for-ci

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}
        path: |
          **/*.trx
          **/coverage.cobertura.xml

  aot-build:
    name: AoT Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
          - os: windows-latest
            rid: win-x64
          - os: macos-latest
            rid: osx-arm64
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        dotnet-quality: 'ga'

    - name: Restore dependencies
      run: dotnet restore

    - name: Publish AoT
      run: |
        dotnet publish Qx/Qx.csproj \
          -c Release \
          -r ${{ matrix.rid }} \
          --self-contained \
          -p:PublishAot=true \
          -p:PublishSingleFile=true \
          -o ./publish/${{ matrix.rid }}
      shell: bash

    - name: Test AoT binary (Unix)
      if: runner.os != 'Windows'
      run: |
        ./publish/${{ matrix.rid }}/qx version
        ./publish/${{ matrix.rid }}/qx --help
      shell: bash

    - name: Test AoT binary (Windows)
      if: runner.os == 'Windows'
      run: |
        ./publish/${{ matrix.rid }}/qx.exe version
        ./publish/${{ matrix.rid }}/qx.exe --help
      shell: pwsh

    - name: Upload AoT artifacts
      uses: actions/upload-artifact@v4
      with:
        name: qx-${{ matrix.rid }}
        path: ./publish/${{ matrix.rid }}/

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        dotnet-quality: 'ga'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Format check
      run: dotnet format --verify-no-changes --verbosity diagnostic

    - name: Analyzer check
      run: dotnet build --no-restore --configuration Release -warnaserror